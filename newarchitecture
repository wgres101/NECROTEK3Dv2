**Blackboard  // a universal place to store variables and their values

BloomFilter // use for optimizing complex functions so they aren't repeated

WebServiceFactory // a class designed to create instances of objects
				//get a WSObject from the service via SpawnServiceObject()

XML GameMap  //a map described entirely in XML - an entire scenegraph

HUD //uses an overhead plastic approach to UI

**MessageManagement //handles messages between services

**ObjectManagment  //a memory manager that has a set pool of memory for variables

Resources  // a representation of a map as a binary file to save and load

**SchedulignManager // a class that schedules eventse depending on the numnber of frames consumed

**Tweaker //a UI component that allows variables to be "tweaked" or changed while live



---------

Fractals

Floats

MenuSystem

-----------------------------

Scheduler - Distributes it to the message queue
Each service has a parseMessage function that acts on various objects
MessageManagement - holds on to and distributes messages to services
Web Service -Attached to scene graph, iterate through scene graph and
			call Update() and parseMessage()
			
-----------------

Use bloom fliters for complex objects
Use Tweaker to adjust values
Use object maanger to allocate objects
Put globals in Blackboard
]Use web service facetory to spawn webservice and wsobjects
